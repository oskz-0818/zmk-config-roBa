#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        bracket: bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp ENTER &kp LEFT_ARROW>;
            label = "BRACKET";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        tk: tk {
            compatible = "zmk,behavior-hold-tap";
            label = "TK";
            bindings = <&to>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W      &kp E         &kp R  &kp T                                           &kp Y      &kp U  &kp I  &kp O           &kp P
&kp A               &kp S      &kp D         &kp F  &kp G         &kp LS(LG(S))      &kp TAB        &kp H      &kp J  &kp K  &kp L           &bracket
&kp Z               &kp X      &kp C         &kp V  &kp LEFT_ALT  &kp SPACE          &kp RS(F10)    &kp B      &kp N  &kp M  &kp UNDERSCORE  &mt INT_MUHENKAN INT_HENKAN
&mt LEFT_SHIFT ESC  &kp LCTRL  &kp LEFT_WIN  &to 1  &to 2         &to 3              &kp BACKSPACE  &kp ENTER                                &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        NUM_FUNC {
            bindings = <
&kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp SLASH     &kp ASTERISK                      &kp F9  &kp F10  &kp F11  &kp F12  &kp PRINTSCREEN
&kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS      &kp MINUS     &trans      &trans  &kp F5  &kp F6   &kp F7   &kp F8   &kp HOME
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_0  &kp PERIOD    &trans      &trans  &kp F1  &kp F2   &kp F3   &kp F4   &kp END
&trans        &trans        &trans        &to 0         &to 0         &to 2       &trans  &trans                             &trans
            >;
        };

        SYMBOL {
            bindings = <
&kp EXCLAMATION  &kp QUESTION  &kp DOUBLE_QUOTES     &kp SINGLE_QUOTE       &kp HASH                                           &kp MINUS   &kp AMPERSAND   &kp PIPE          &kp CARET       &kp SLASH
&kp EQUAL        &kp PLUS      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &trans  &kp TILDE   &kp LEFT_BRACE  &kp RIGHT_BRACE   &kp SEMICOLON   &kp COMMA
&kp BACKSLASH    &kp AT_SIGN   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PERCENT   &trans                       &trans  &kp DOLLAR  &kp LESS_THAN   &kp GREATER_THAN  &kp UNDERSCORE  &kp PERIOD
&trans           &trans        &trans                &to 0                  &to 1         &to 3                        &trans  &trans                                                        &trans
            >;
        };

        ARROW {
            bindings = <
&kp PAGE_UP    &none           &kp UP_ARROW    &none            &kp HOME                      &kp PAGE_UP    &none           &kp UP_ARROW    &none            &kp HOME
&kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END   &trans      &trans  &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END
&none          &none           &none           &none            &none     &trans      &trans  &none          &none           &none           &none            &kp ESCAPE
&trans         &trans          &trans          &to 0            &to 2     &to 6       &trans  &trans                                                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans             &mmv MOVE_Y(100)   &trans            &trans                      &trans    &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &mmv MOVE_X(-100)  &mmv MOVE_Y(-100)  &mmv MOVE_X(100)  &trans  &trans      &trans  &mkp MB4  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans             &trans             &trans            &trans  &trans      &trans  &mkp MB5  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans             &trans             &to 0             &trans  &trans      &trans  &trans                                  &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &to 0         &to 3   &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
